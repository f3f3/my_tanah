<?php
$comments = (!empty($comments))?$comments:["none"=>null];
//var_dump(array_keys($comments));
//$button = "Update";
$land = (!empty($land))?$land:[
	"land_project_type_id"=>null,
	"land_status_type"=>null,
	"province_id"=>null,
	"districts_id"=>null,
	"sub_district_id"=>null,
	"village_id"=>null,
	"geolocation"=>null,
	"owner_initial_name"=>null,
	"owner_final_name"=>null,
	"owner_ppjb"=>null,
	"owner_annotation"=>null,
	"surface_area"=>null,
	"price_per_cubic_meter"=>null,
	"total_price"=>null,
	"land_id"=>null,
	"land_documents_code"=>null,
	"land_project_id"=>null,
	"land_mediator"=>null,
	"owner_id"=>null,
	"surface_area_id"=>null,
	"land_status_id"=>null,
	"map_id"=>null,
	"land_date"=>null,
	"land_physics_id"=>null
];
$multi_form_labeled_input = function ($label, $id, $hide_label = false, $value = [["id"=>"","label"=>"","value"=>"","placeholder"=>"","title"=>"","extra"=>[]]]) use ($button,$comments) {
	$result = ($button!="Create" && in_array($label, array_keys($comments))) ?
		'<span class="comment" rel="comments" data-placement="right" data-name="'.$label.'" data-content="'.$comments[$label].'"></span>' : "";
	//$append = '<div class="form-group">';
	$append = form_label($label, $id);
	$append .= '<div class="line-up mbm-5">';
	foreach($value as $row){
		$append .= '<div class="form-group w-100 r-5"><div class="input-group">';
		$append .= $hide_label?'':'<span class="input-group-addon" id="'.$row["id"].'" data-toggle="tooltip" data-placement="top" title="'.$row["title"].'">'.$row["label"].'</span>';
		//$append .= form_label($row["label"], $row["id"], ["class"=>($hide_label?"sr-only":"")]);
		$extra = array_merge($row["extra"], ['class' => 'form-control', 'aria-describedby' => $row["id"] . '_help', 'placeholder' => $row["placeholder"]]);
		$append .= form_input($row["id"], $row["value"], $extra);
		$append .= '<span class="input-group-addon"><span style="font-family: fantasy;">M<sup>2</sup></span></span>';
		$append .= '</div></div>';
	}
	$append .= '</div>';

	return $append;
};
$form_labeled_input = function ($label, $id, $extra = null, $prefix = null, $value = null) use ($button,$comments) {
	$prefix = !empty($prefix) ? $prefix . '[' . $id . ']' : $id;
	//$result = ($button != "Create") ? form_checkbox($prefix, null, false, ['id' => $id]) : "";
	$result = ($button!="Create" && in_array($label, array_keys($comments))) ? '<span class="comment" rel="comments" data-placement="right" data-name="'.$label.'" data-content="'.$comments[$label].'"></span>' : "";
	return '<div class="form-group">' .
		$result .
		form_label($label, $id) .
		form_input($id, $value, ['class' => 'form-control', 'aria-describedby' => $id . '_help', 'placeholder' => $extra, "autocomplete"=>"off"]) .
		'</div>';
};
$form_labeled_dropdown = function ($label, $name, $table, $field, $key, $selected = null, $extra, $prefix = null) use ($button,$comments) {
	$prefix = !empty($prefix) ? $prefix . '[' . $key . ']' : $key;
	//$result = ($button != "Create") ? form_checkbox($prefix, null, false, ['id' => $key]) : "";
	$result = ($button!="Create" && in_array($label, array_keys($comments))) ? '<span class="comment" rel="comments" data-placement="right" data-name="'.$label.'" data-content="'.$comments[$label].'"></span>' : "";
	$append = '<div class="form-group">' . $result . form_label($label, $key);
	if(!empty($extra["must_selected"])){
		if(($extra["must_selected"]==true) && !empty($selected))
			$append .= cmb_template($name, $table, $field, $key, $selected, $extra);
		else $append .= '<select name="'.$name.'" class="form-control" readonly>
					<option hidden="" disabled="" selected="">'.$extra["placeholder"].'</option>
				</select>';
	} else $append .= cmb_template($name, $table, $field, $key, $selected, $extra);
	$append .= '</div>';
	return $append;
};
$form_labeled_custom = function ($label, $name, $table, $field, $key, $selected = null, $extra=[], $prefix = null) use ($button,$comments) {
	$prefix = !empty($prefix) ? $prefix . '[' . $key . ']' : $key;
	//$result = ($button != "Create") ? form_checkbox($prefix, null, false, ['id' => $key]) : "";
	$result = ($button!="Create" && in_array($label, array_keys($comments))) ? '<span class="comment" rel="comments" data-placement="right" data-name="'.$label.'" data-content="'.$comments[$label].'"></span>' : "";
	$append = '<div class="form-group">' . $result . form_label($label, $key) . '<div class="line-up">'; 
	
	if(!empty($extra["must_selected"]) && ($extra["must_selected"]==true) && !empty($selected)){
		//$append .= cmb_template($name, $table, $field, $key, $selected, $extra);
	} else {
		$append .= '<select name="'.$name.'" class="form-control" readonly>
					<option hidden="" disabled="" selected="">'.$extra["placeholder"].'</option>
				</select>';
	}

	$append .= form_input($key, null, ['id' => 'input_' . $key, 'class' => 'form-control', 'aria-describedby' => $key . '_help']) .
				form_button($name, '+', ['class' => 'btn btn-primary']) .
				'</div></div>';

	return $append;
};
$cmb_box = function ($label, $id, $prefix = null) use ($button,$comments) {
	$prefix = !empty($prefix) ? $prefix . '[' . $id . ']' : $id;
	//$result = ($button != "Create") ? form_checkbox($prefix, null, false, ['id' => $id]) : "";
	$result = ($button!="Create" && in_array($label, array_keys($comments))) ? '<span class="comment" rel="comments" data-placement="right" data-name="'.$label.'" data-content="'.$comments[$label].'"></span>' : "";
	$array_row = [
		["ASLI", "COPY", "N/A"],
		["ADA", "TIDAK", "N/A"],
		["PERLU", "TIDAK PERLU", "N/A"]
	];
	$string_all = '<div class="form-group">';
	$string_all .= $result;
	$string_all .= '<label>' . $label . '</label>';
	$string_all .= '<div class="line-up">';
	foreach ($array_row as $row) {
		$string_all .= '<select name="col_' . $id . '_doc[]" class="form-control">';
		$string_all .= '<option hidden disabled selected>- - -</option>';
		foreach ($row as $ids => $col) {
			$string_all .= '<option value="' . $ids . '">' . $col . '</option>';
		}
		$string_all .= "</select>";
	}
	$string_all .= form_input('col_' . $id . '_doc[]', null, ['class' => 'form-control', 'aria-describedby' => 'col_' . $id . '_help', 'placeholder' => 'keterangan']);
	$string_all .= '<button data-val=' . $id . ' data-method=2 class="btn btn-success btn-xi" style="overflow: unset; margin-right:5px" disabled>
			<span class="glyphicon glyphicon-folder-open"></span>
		</button>';
	$string_all .= "</div></div>";
	return $string_all;
};
?>

<?php /*
<script src='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js'></script>
<link href='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css' rel='stylesheet' />

<link href='<?php echo base_url() ?>assets/leaflet-easybutton/src/easy-button.css' rel='stylesheet' />
<script src="<?php echo base_url() ?>assets/leaflet-easybutton/src/easy-button.js"></script>

<link href='<?php echo base_url() ?>assets/leaflet-measure-path/leaflet-measure-path.css' rel='stylesheet' />
<script src="<?php echo base_url() ?>assets/leaflet-measure-path/leaflet-measure-path.js"></script>

<link href="<?php echo base_url() ?>assets/leaflet-draw/leaflet.draw.css" rel='stylesheet' />
<script src="<?php echo base_url() ?>assets/leaflet-draw/leaflet.draw.js"></script> */ ?>


<script src="https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css" rel="stylesheet" />
<script src="https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v3.0.11/turf.min.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.js"></script>
<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.css" type="text/css" />

<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.5.1/mapbox-gl-geocoder.min.js"></script>
<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.5.1/mapbox-gl-geocoder.css" type="text/css" />

<link href="<?=base_url("assets/enlink")?>/vendors/select2/select2.min.css" rel="stylesheet">
<link href="<?=base_url("assets/enlink")?>/vendors/select2/select2-bootstrap4.min.css" rel="stylesheet">

<link rel="stylesheet" href="<?=base_url()?>assets/bootstrap-fileinput/css/fileinput.min.css">
<link rel="stylesheet" href="<?=base_url()?>assets/bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css">
<link rel="stylesheet" href="<?=base_url()?>assets/year-picker/dist/yearpicker.min.css">
<style>
	.h-100 {
		height: 100%;
	}
	.w-unset {
		width: unset !important;
	}
	.f-auto {
		flex: auto;
	}
	.fy {
		font-family: monospace;
	}
	.flexy, .nixsy {
		position: relative;
		display: flex;
		align-items: stretch;
		width: 100%;
	}
	.flexy .input-affix:first-child {
		width: unset;
		flex: 0 0 50%;
	}
	.yearpicker-header {
		height: unset;
	}
	.yearpicker-container {
		left: calc(100% - 200px);
		bottom: 42px;
		font-size: 14px;
		width: 200px;
		z-index: 991;
	}
	.yearpicker-prev, .yearpicker-current, .yearpicker-next {
		font-size: 2rem;
	}
	.yearpicker-current {
		font-size: 1rem;
	}
	.yearpicker-items {
		padding: .5rem;
	}
	.push-push.add-line {
		position: absolute;
		right: 5px;
		cursor: pointer;
		font-size: 2rem;
	}
	.bg-gradient-primary {
		background: linear-gradient(to left, #be5fca 0%, #705ec8 100%);
		color: #fff !important;
	}
	.bg-gradient-success {
		background: linear-gradient(to left, #5e5ec8 0%, #5ec87c 100%);
		color: #fff !important;
	}
	.p_btn {
		position: absolute;
		top: 0;
		right: 11px;
		font-size: 34.5px;
		cursor: pointer;
		color: #fff;
		background: none;
		border: none;
	}
	.p_btn:hover, .p_btn:active, .p_btn:focus {
		color: #5ec87c;
		outline: none;
	}
	.select2-container--bootstrap4 .select2-selection--single {
		height: calc(1.5em + .75rem + 7px)!important;
	}
	.select_size {
		max-width: unset;
	}
	.zup {
		z-index: 1060;
	}
	.acc-lock:after{
		content: "\e06c" !important;
		font-family: "anticon" !important;
		transform: none !important;
	}
	#map {
		position: absolute;
		top: 0;
		bottom: 0;
		right: 0;
		left: 0;
		height: 500px;
	}
	.map-power {
		height: 450px;
	}
</style>
<div class="page-header">
    <h2 class="header-title">CREATE</h2>
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>HOME</a>
            <a class="breadcrumb-item" href="#">LAND</a>
            <span class="breadcrumb-item active">CREATE</span>
        </nav>
    </div>
</div>

<form action="<?php echo $action; ?>" method="post" id="fompt">
<div class="accordion" id="accordion-tanah">
    <div class="card">
        <div class="card-header ">
            <h5 class="card-title">
                <a class="bg-gradient-primary dust <?=$button!='Update'?"acc-lock":""?>" data-toggle="collapse" href="#dataTanah">
                    <span>Data Tanah</span>
                </a>
            </h5>
        </div>
        <div id="dataTanah" class="collapse show" data-parent="#accordion-tanah">
            <div class="card-body">
				<div class="row display-flex">
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
						<fieldset class="border p-2 h-100">
							<legend  class="w-auto">Detail Tanah</legend>
							<div class="row display-flex">
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_input('Document Code', 'land_documents_code', null, "land", $land["land_documents_code"]) ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_dropdown('Jenis Proyek', 'land_project_id', 'land_project_type', 'land_project_type_name', 'land_project_type_id', $land["land_project_type_id"], ["placeholder" => "-----Pilih Project-----"], "status_tanah") ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_dropdown('Staus Fisik Tanah', 'land_physics_id', 'land_physics', 'land_physics_name', 'land_physics_id', $land["land_physics_id"], ["placeholder" => "-----Pilih Status Fisik-----"], "status_tanah") ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_input('Sumber (Mediator)', 'land_mediator', null, "status_tanah", $land["land_mediator"]) ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6 checklah">
									<div class="form-group d-flex align-items-center">
										<div class="switch m-r-10">
											<input type="checkbox" id="switch-1" name="land_di_patok">
											<label for="switch-1"></label>
										</div>
										<label>Tanah Sudah Dipatok</label>
									</div>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6 checklah">
									<div class="form-group d-flex align-items-center">
										<div class="switch m-r-10">
											<input type="checkbox" id="switch-2" name="land_di_ptsl">
											<label for="switch-2"></label>
										</div>
										<label>Sudah Dalam PTSL</label>
									</div>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
						<fieldset class="border p-2 h-100">
							<legend  class="w-auto">Alamat</legend>
							<div class="row display-flex">
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_dropdown('Provinsi', 'map_province_id', 'loc_province', 'province_name', 'province_id', $land["province_id"], ["placeholder" => "-----Pilih Provinsi-----"], "status_tanah"); ?>
								</div>
								<?php
									echo '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">';
									echo $form_labeled_dropdown('Kabupaten','map_districts_id','loc_districts','districts_name','districts_id',$land["districts_id"],
										[
											"placeholder" => "-----Pilih Kabupaten-----",
											"must_selected" => true,
											"where" =>[
												"id"=>"where",
												"key"=>"province_id",
												"values"=>$land["province_id"],
											]
										], "status_tanah"
									);
									echo '</div>';

									echo '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">';
									echo $form_labeled_dropdown('Kabupaten','map_sub_district_id','loc_sub_district','sub_district_name','sub_district_id',$land["sub_district_id"],
										[
											"placeholder" => "-----Pilih Kecamatan-----",
											"must_selected" => true,
											"where" =>[
												"id"=>"where",
												"key"=>"districts_id",
												"values"=>$land["districts_id"],
											]
										], "status_tanah"
									);
									echo '</div>';

									echo '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">';
									echo $form_labeled_dropdown('Desa/Kelurahan','map_village_id','loc_village','village_name','village_id',$land["village_id"],
										[
											"placeholder" => "-----Pilih Desa/Kelurahan-----",
											"must_selected" => true,
											"where" =>[
												"id"=>"where",
												"key"=>"sub_district_id",
												"values"=>$land["sub_district_id"],
											]
										], "status_tanah"
									);
									echo '</div>';
								?>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<div class="form-group">
										<?=($button!="Create" && in_array("vgeolocation", array_keys($comments))) ? '<span class="comment" rel="comments" data-placement="right" data-name="vgeolocation" data-content="'.$comments["vgeolocation"].'"></span>' : "";?>
										<label for="vgeolocation">Geolocation</label>
										<div class="input-group mb-3">
										<input type="text" name="map_geolocation" readonly placeholder="geolocation" class="form-control" value='<?=$land["geolocation"]?>' >
											<div class="input-group-append">
												<button class="btn btn-success btn-map">
													<i class="anticon anticon-environment"></i>
												</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6 mt-1">
						<fieldset class="border p-2 h-100">
							<legend  class="w-auto">Pemilik Tanah</legend>
							<div class="row display-flex">
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_input('Pemilik Asal', 'owner_initial_name', 'Pemilik Asal', "nama_pemilik", $land["owner_initial_name"]) ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_input('Pemilik Baru', 'owner_final_name', 'Pemilik Baru', "nama_pemilik", $land["owner_final_name"]) ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_input('PPJB Atas Nama', 'owner_ppjb', 'PPJB Atas Nama', "nama_pemilik", $land["owner_ppjb"]) ?>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<?= $form_labeled_input('Keterangan', 'owner_annotation', 'Keterangan', "nama_pemilik", $land["owner_annotation"]) ?>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6 mt-1">
						<fieldset class="border p-2 h-100">
							<legend  class="w-auto">Luas Tanah</legend>
							<div class="row display-flex">
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<div class="form-group">
										<label for="by_doc">Luas Tanah Berdasarkan Surat</label>
										<div class="input-affix">
											<input type="text" name="surface_area_by_doc" value="" data-mask="000.000.000.000.000" data-mask-reverse="true" class="form-control" aria-describedby="by_doc_help" placeholder="Luas Tanah" autocomplete="off" maxlength="19">
											<span class="suffix-icon fy">M<sup>2</sup></span>
										</div>
									</div>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<div class="form-group">
										<label for="by_doc">Luas Tanah Berdasarkan Pengukuran Ulang</label>
										<div class="input-affix">
											<input type="text" name="surface_area_by_remeas" value="" data-mask="000.000.000.000.000" data-mask-reverse="true" class="form-control" aria-describedby="by_remeas_help" placeholder="Luas Tanah" autocomplete="off" maxlength="19">
											<span class="suffix-icon fy">M<sup>2</sup></span>
										</div>
									</div>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<div class="form-group">
										<label for="by_doc">Luas Tanah Berdasarkan GPS</label>
										<div class="input-affix">
											<input type="text" name="surface_area_by_geo" value="" data-mask="000.000.000.000.000" data-mask-reverse="true" class="form-control" aria-describedby="by_geo_help" placeholder="Luas Tanah" autocomplete="off" maxlength="19">
											<span class="suffix-icon fy">M<sup>2</sup></span>
										</div>
									</div>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
									<div class="form-group by_purchase">
										<label for="by_purchase">Harga Beli Per M<sup>2</sup></label>
										<div class="flexy line-child">
											<div class="input-affix">
												<input type="text" data-id="surface_data[1]" name="surface_data[1][1][1]" value="" class="form-control" aria-describedby="by_purchase[1]_help" placeholder="Harga" data-mask="000.000.000.000.000" data-mask-reverse="true" autocomplete="off" maxlength="19">
												<span class="suffix-icon fy">M<sup>2</sup></span>
											</div>
											<div class="input-affix">
												<input type="text" data-id="surface_data[1]" name="surface_data[1][1][2]" data-unequal="purchase" value="" class="form-control valid" aria-describedby="by_purchase[2]_help" placeholder="Tahun" data-toggle="yearpicker" aria-invalid="false">
												<i class="suffix-icon anticon anticon-calendar"></i>
											</div>
										</div>
									</div>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6 mt-1">
						<fieldset class="border p-2 h-100">
							<legend class="w-auto">Harga Pasar<span class="push-push add-line add-market"><i class="anticon anticon-plus-circle"></i></span></legend>
							<div class="row display-flex by_market">
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 line-child">
									<div class="line-up mbm-5">
										<div class="form-group w-100">
											<div class="input-group">
												<div class="input-affix w-unset f-auto">
													<span class="prefix-icon fy">RP</span>
													<input type="text" data-id="surface_data[2]" name="surface_data[2][1][1]" value="" class="form-control" aria-describedby="by_market[1][1]_help" placeholder="Harga" data-mask="000.000.000.000.000" data-mask-reverse="true">
													<span class="suffix-icon fy">M<sup>2</sup></span>
												</div>
												<div class="input-affix w-unset f-auto">
													<input type="text" data-id="surface_data[2]" name="surface_data[2][1][2]" data-unequal="market" value="" class="form-control" aria-describedby="by_market[1][2]_help" placeholder="Tahun" data-toggle="yearpicker">
													<i class="suffix-icon anticon anticon-calendar"></i>
												</div>
												<div class="input-group-append">
													<button type="button" class="btn btn-success calculate" data-toggle="tooltip" data-placement="top" title="" data-original-title="Kalkulasi Harga Total"><i class="anticon anticon-calculator"></i></button>
													<button type="button" class="btn btn-danger remover"><i class="anticon anticon-delete"></i></span></button>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6 mt-1">
						<fieldset class="border p-2 h-100">
							<legend class="w-auto">NJOP<span class="push-push add-line add-njop"><i class="anticon anticon-plus-circle"></i></span></legend>
							<div class="row display-flex by_njop">
								<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 line-child">
									<div class="line-up mbm-5">
										<div class="form-group w-100">
											<div class="input-group">
												<div class="input-affix w-unset f-auto">
													<span class="prefix-icon fy">RP</span>
													<input type="text" data-id="surface_data[3]" name="surface_data[3][1][1]" value="" class="form-control" aria-describedby="by_njop[1][1]_help" placeholder="Harga" data-mask="000.000.000.000.000" data-mask-reverse="true">
													<span class="suffix-icon fy">M<sup>2</sup></span>
												</div>
												<div class="input-affix w-unset f-auto">
													<input type="text" data-id="surface_data[3]" data-unequal="njop" name="surface_data[3][1][2]" value="" class="form-control" aria-describedby="by_njop[1][2]_help" placeholder="Tahun" data-toggle="yearpicker">
													<i class="suffix-icon anticon anticon-calendar"></i>
												</div>
												<div class="input-group-append">
													<button type="button" class="btn btn-success calculate" data-toggle="tooltip" data-placement="top" title="" data-original-title="Kalkulasi Harga Total"><i class="anticon anticon-calculator"></i></button>
													<button type="button" class="btn btn-danger remover"><i class="anticon anticon-delete"></i></span></button>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-3">
						<?=($button=="Create")?'<button class="btn btn-primary w-100 next-tab initial-save" data-href="#strategy">NEXT</button>':"";?>
					</div>
				</div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">
                <a class="collapsed bg-gradient-success dust <?=$button!='Update'?"acc-lock":""?>" data-toggle="collapse" href="#dokumentTanah">
                    <span>Dokumen Tanah</span>
				</a>
				<button class="p_btn popover_select2"><i class="anticon anticon-appstore"></i></button>
			</h5>
        </div>
        <div id="dokumentTanah" class="collapse" data-parent="#accordion-tanah">
            <div class="card-body">
				<div class="row" id="sp_row">
				</div>
			</div>
        </div>
    </div>
</div>
<?php
	if(!empty($initial))
	foreach($initial as $row){
		echo "<input type='hidden' name='$row' value='$land[$row]'>";
	}
?>
</form>

<!-- Modal Pengiriman -->
<div class="modal fade" id="tambahDoc" tabindex="-1" role="dialog" aria-labelledby="tambahDocTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="tambahDocTitle">Upload File</h5>
      </div>
      <div class="modal-body">
	  	<div class="form-group">
			<div id="file-wrap">
			</div>
		</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Done</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="tambahMap" tabindex="-1" role="dialog" aria-labelledby="tambahMapTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="tambahMapTitle">Geolocation</h5>
      </div>
      <div class="modal-body">
	  	<div class="map-power"><div id="map"></div></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" id="save_mat" class="btn btn-success">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- load the third party plugin assets (jquery-confirm) -->
<link href="//cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css" rel="stylesheet" type="text/css" />
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/bootstrap-fileinput/js/fileinput.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/bootstrap-fileinput/themes/fa/theme.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/js/jquery.mask.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/js/jquery.validate.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/moment/dist/moment.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/moment/dist/id.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
<script type="text/javascript" src="<?=base_url()?>assets/year-picker/dist/yearpicker.min.js"></script>
<script type="text/javascript" src="<?=base_url("assets/enlink")?>/vendors/select2/select2.min.js"></script>
<script>
	function dom_clear($s){
		if (Array.isArray($s)) {
			$als_clear = [
				['[name=map_districts_id]',"Kabupaten"],
				['[name=map_sub_district_id]',"Kecamatan"],
				['[name=map_village_id]',"Desa/Kelurahan"],
			]
			$.each($s, function(i, v) {
				$($als_clear[v][0]).find('option').remove().end()
					.append('<option hidden="" disabled="" selected="">-----Pilih '+$als_clear[v][1]+'-----</option>');
			});
		}
	}
	function dom_location($name, $val, callback){
		d_n = $name; d_v = $val;
		dc = callback?callback:function(){};
		$url = {
			"map_province_id":["get_districts",'[name="map_districts_id"]'],
			"map_districts_id":["get_sub_districts",'[name="map_sub_district_id"]'],
			"map_sub_district_id":["get_village",'[name="map_village_id"]'],
		}
		$clr = [2];
		if(d_n=="map_province_id"){
			$('[name=map_districts_id]').attr("readonly", true);
			$clr.push(0);
		}
		if(["map_province_id","map_districts_id"].includes(d_n)){
			$('[name=map_sub_district_id]').attr("readonly", true);
			$clr.push(1);
		}
		$('[name=map_village_id]').attr("readonly", true);
		dom_clear($clr);

		$.post('<?= base_url("land") ?>/'+$url[d_n][0], {id: d_v}, function(data) {
			$.each(data, function(key, value) {
				$($url[d_n][1]).append($("<option></option>").attr("value", key).text(value));
			});
			$($url[d_n][1]).removeAttr("readonly");
			callback();
		}, 'json').fail(function() {
			console.log("Please check your code and try again!");
		});
	}
	function add_line(app){
		ele = $(app).parents("fieldset").find(".line-child");
		set = ele.length + 1;
		bow = ele.first().clone();
		unequal = "";
		the_name = [];
		bow.find("input").val("").each(function(i,v){
			id_name = $(v).attr("data-id");
			$(v).attr('name',id_name+'['+set+']['+(i+1)+']');
			$(v).attr('aria-describedby',id_name+'['+set+']['+(i+1)+']');
			$(v).mask('000.000.000.000.000', {reverse: true});
			the_name.push(id_name+'['+set+']['+(i+1)+']');
			if(i) {
				unequal=$(v).attr("data-unequal");
				$(v).yearpicker({
					onHide:function(){ 
						$('[data-unequal="'+unequal+'"]').each(function(i, v){
							validator.element('[name="'+$(v).attr("name")+'"]');
						});
					},
					onChange:function(){
						$('[data-unequal="'+unequal+'"]').each(function(i, v){
							validator.element('[name="'+$(v).attr("name")+'"]');
						});
					}
				});
			}
		});
		bow.find('[data-toggle="tooltip"]').tooltip();
		$(app).parents("fieldset").find(".row").append(bow);
		$('[name="'+the_name[0]+'"]').rules("add", {rupiah: true, required: true});
		$('[name="'+the_name[1]+'"]').rules("add", {year: true, required: true, notEqual: '[data-unequal="'+unequal+'"]'});
	}
	$('[data-toggle="popover"]').popover();
	$('[name=map_province_id]').change(function() {
		dom_location(this.name, this.value);
	});
	$('[name=map_districts_id]').change(function() {
		dom_location(this.name, this.value);
	});
	$('[name=map_sub_district_id]').change(function() {
		dom_location(this.name, this.value);
	});

	<?php if($button=='Update'){ ?>
		//Initial
		$.post('<?=base_url("land/land_data/".$land_id)?>', function(data){
			$als = ["map_province_id","map_districts_id","map_sub_district_id","map_village_id","land_id"];
			$axs = ["",".by_purchase",".by_market",".by_njop"];
			$.each(data["land"], function(i,v){
				if(!$als.includes(i)){
					elmentz = $('[name="'+i+'"]');
					elmentz.val(v); plholdz = elmentz.attr('placeholder');
					if(plholdz=="Luas Tanah") elmentz.trigger("input");
					if($(elmentz).attr("type")=="checkbox") elmentz.attr("checked", v==1);
				}
			});
			$('[name="'+$als[0]+'"]').val(data["land"][$als[0]]);
			dom_location($als[0], data["land"][$als[0]], function(){
				$('[name="'+$als[1]+'"]').val(data["land"][$als[1]]);
				dom_location($als[1], data["land"][$als[1]], function(){
					$('[name="'+$als[2]+'"]').val(data["land"][$als[2]]);
					dom_location($als[2], data["land"][$als[2]], function(){
						$('[name="'+$als[3]+'"]').val(data["land"][$als[3]]);
					});
				});
			});
			$("#sp_row").append("<input type='hidden' name='"+$als[4]+"' value='"+data["land"][$als[4]]+"'>");
			$.each(data["surface_area"], function(i,v){
				$.each(v, function(x,z){
					if(["2","3"].includes(i)){
						if(x) add_line(i==2?$(".add-market"):$(".add-njop"));
					}
					$.each(z, function(a,b){
						elment = $('[name="surface_data['+(i)+']['+(1+x)+']['+(1+a)+']"]');
						elment.val(b); plhold = $(elment).attr('placeholder');
						if(plhold=="Harga") elment.trigger("input");
						$($axs[i]+" .line-child").eq(a).append("<input type='hidden' \
							name='surface_id["+(i)+"]["+(1+x)+"]' \
							value='"+b+"'>");
					});
				});
			});
		}, "JSON");
	<?php } ?>
	$(".loading-wrap").fadeTo('slow', 0, function(){ $(".loading-wrap").remove(); });

	$(".btn-map").click(function(e){
		e.preventDefault();
	});
	$(".dust").click(function(e){
		if($(this).hasClass("acc-lock")){
			e.preventDefault();
			e.stopPropagation();
		}
	});
	$(".dust+.popover_select2").click(function(e){
		if($(this).siblings(".dust").hasClass("acc-lock")){
			e.preventDefault();
			e.stopPropagation();
		}
	});
	
	var initialSave = true;
	$(".initial-save").click(function(e){
		e.preventDefault();
		if(initialSave){
			$args = ["",".by_purchase",".by_market",".by_njop"];
			$fourty_one = true;
			$form_data = {};
			$.each($('#dataTanah').find("input, select"),function(i,v){
				$fourty_one &= validator.element('[name="'+$(v).attr("name")+'"]');
				if($(v).attr("type")=="checkbox") $form_data[v.name]=(v.checked?1:0)
				else if(["Luas Tanah","Harga"].includes($(v).attr('placeholder'))) $form_data[v.name]=$(v).cleanVal();
				else $form_data[v.name]=v.value;
			});

			if($fourty_one){
				$.post('<?=base_url("land/initial_land")?>', $form_data, function(data){
					console.log(data);
					if(data.status==true){
						$.each(data.log_data, function(i,v){
							$("#sp_row").append("<input type='hidden' name='"+i+"' value='"+v+"'>");
						});
						$.each(data.surface_id, function(i,v){
							$.each(v, function(a,b){
								$($args[i]+" .line-child").eq(a).append("<input type='hidden' \
									name='surface_id["+(i)+"]["+(1+a)+"]' \
									value='"+b+"'>");
							});
						});
						$(".dust").removeClass("acc-lock");
						initialSave = false;
						$(".initial-save").parent().remove();
					}
				},"JSON");
			}
		}
	});

	$('#fompt').submit(function(e){
		e.preventDefault();
		if(!initialSave){
			if($(this).validate().valid()){
				$data_array = {};
				$.map($(this).serializeArray(),function(v,i){
					$data_array[v.name]=v.value;
				});
				$(this).find('["type"="checkbox"]:checked').each(function(i,v){
					$data_array[v.name]=v.checked;
				});				
				//console.log(JSON.stringify($data_array));
				$.post("<?=$action?>",$data_array,function(data){
					console.log(data);
					//location.reload();
				});
			}
		}
	});

	var value_luas = [];
	$(document).delegate(".calculate","click",function(e){
		var input_val = $(this).siblings(".form-group:first").find("input").cleanVal();
		var empty = input_val==""; value_luas = [];
		$("#map_body .line-up:first input").each(function(){
			if($(this).val()!=""){
				value_luas.push($(this).val()*input_val);
			} else {
				empty = true;
				return false;
			}
		});
		if ((!$(this).data("bs.popover") || !$(this).attr('data-popoverAttached')) && !empty) {
			$(".calculate").popover('destroy');
			$(this).popover('destroy').popover({
				html: true,
				content: '<div class="form-group"> \
							<div class="line-up"> \
								<div class="input-group w-100 r-5"> \
									<span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="" data-original-title="Harga Total dengan Luas Tanah Berdasarkan Surat"> \
										<i class="fa fa-file-text" aria-hidden="true"></i> \
									</span> \
									<input type="text" value="" class="form-control" readonly> \
									<span class="input-group-addon"><span style="font-family: fantasy;">M<sup>2</sup></span></span> \
								</div> \
								<div class="input-group w-100 r-5"> \
									<span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="" data-original-title="Harga Total dengan Luas Tanah Berdasarkan Pengukuran Ulang"> \
										<i class="fa fa-area-chart" aria-hidden="true"></i> \
									</span> \
									<input type="text" value="" class="form-control" readonly> \
									<span class="input-group-addon"><span style="font-family: fantasy;">M<sup>2</sup></span></span> \
								</div> \
								<div class="input-group w-100 r-5"> \
									<span class="input-group-addon" data-toggle="tooltip" data-placement="top" title="" data-original-title="Harga Total dengan Luas Tanah Berdasarkan GPS"> \
										<i class="fa fa-map" aria-hidden="true"></i> \
									</span> \
									<input type="text" value="" class="form-control" readonly> \
									<span class="input-group-addon"><span style="font-family: fantasy;">M<sup>2</sup></span></span> \
								</div> \
							</div> \
						</div>',
				template: '<div class="popover custom_size total_harga" role="tooltip"><div class="arrow"></div><div class="popover-content"></div></div>',
				placement: "bottom",
				trigger: "manual",
			});
			$(this).attr('data-popoverAttached', true);
			$(this).popover('show');
			$(".calculate span.fa-times").removeClass("fa-times").addClass("fa-angle-double-down");
			$(this).find("span").removeClass("fa-angle-double-down").addClass("fa-times");
		} else {
			$(this).removeAttr('data-popoverAttached');
			$(this).popover('destroy');
			$(this).removeData('bs.popover');
			$(this).find("span").removeClass("fa-times").addClass("fa-angle-double-down");
		}
		//$('.popover').css('left', '63px');
	});

	$(document).delegate(".calculate","shown.bs.popover",function(e){
		$(".total_harga").find('input').each(function(i,v){
			$(v).val(value_luas[i]);
			$(v).mask('000.000.000.000.000', {reverse: true});
		});
		$('[data-toggle="tooltip"]').tooltip();
		left = $(".total_harga").css('left');
		left.replace('px');
		//$(".total_harga").css('left',(parseFloat(left)-45.0)+'px');
		$(".total_harga").css('left','-1px');
		$(".total_harga").css('min-width',$(this).parents(".r-5").css("width"));
	});

	$('[data-toggle="tooltip"]').tooltip();
	$(".add-line").click(function(e){
		e.preventDefault();
		add_line(this);
	});

	$(document).delegate(".remover","click",function(e){
		ele = $(this).parents("fieldset");
		$(this).parents(".line-child").remove();
		ele.find(".line-child").each(function(i,v){
			$(v).find("input").each(function(a,b){
				id_name = $(b).attr("data-id");
				$(b).attr('name',id_name+'['+(i+1)+']['+(a+1)+']');
				$(b).attr('aria-describedby',id_name+'['+(i+1)+']['+(a+1)+']');
			});
		});
		//console.log(ele.find(".form-group"));
	});

	$('[rel="comments"]').each(function(){
		$parents = $('a[href="#'+$(this).parents(".tab-pane").attr("id")+'"]').parent();
		$parents.addClass("error");
	});
	$('.comment').popover({
        trigger: "manual",
        html: true,
        container: "body",
        //placement: "right",
        template: '<div class="popover"><div class="arrow"></div>'+
              '<h3 class="popover-title"></h3><div class="popover-content w-content">'+
              '</div></div>',
        content: function(){
			return '<textarea class="popover-textarea" placeholder="Comment" readonly></textarea>';
        }
    });
    
    $('.comment').on({
        "shown.bs.popover": function(){
            $("[rel=comments]").not(this).popover('hide');
            iputName = $(this).attr("data-name");
            var $this = $(this);
            //attach link text
            $('.popover-textarea').val($('[name="comments['+iputName+']"]').val());
            //close on cancel
            $('.popover-cancel').click(function() {
                $this.popover('hide');
            });
            //update link text on submit
            $('.popover-submit').click(function() {
                $('[name="comments['+iputName+']"]').val($('.popover-textarea').val());
                if($('[name="comments['+iputName+']"]').val()){
                    if(!$this.hasClass("ed")) $this.addClass("ed");
                } else $this.removeClass("ed");
                $this.popover('hide');
            });
        },
        "hide.bs.popover": function(){
            $(this).blur();    
        },
        "click": function(){
            $(this).popover("toggle");    
        }
    });
	//validation
	$.validator.setDefaults({
		debug: true,
		success: "valid"
	});
	$.validator.addMethod("json", function(value, element) {
		opt = false;
		$.ajax({
			url: '<?=base_url("land/get_code")?>',
			async: false,
			data: {"code":value},
			dataType: "json",
			success: function(data) {
				return opt = data.valid;
			}
		});
		return this.optional(element) || opt;
	}, "Document Code Already Exist!");
	$.validator.addMethod("alpha_dash", function(value, element) {
		return this.optional(element) || /^([-a-zA-Z_])+$/i.test(value); 
	}, "Alpha, spaces, underscores & dashes only.");
	$.validator.addMethod("alpha_space", function(value, element) {
		return this.optional(element) || /^([a-zA-Z ])+$/i.test(value); 
	}, "Alpha & spaces only.");
	$.validator.addMethod("alphanumeric_slash", function(value, element) {
		return this.optional(element) || /^([0-9a-zA-Z/])+$/i.test(value); 
	}, "Alphanumeric & Slash only.");
	$.validator.addMethod("rupiah", function(value, element) {
		return this.optional(element) || /^([0-9.])+$/i.test(value); 
	}, "Valid Rupiah Format only.");
	$.validator.addMethod("phoneNumber", function(value, element) {
		return this.optional(element) || /^(^8)(\d{3,4}-?){2}\d{1,4}$/i.test(value); 
	}, "Valid Indonesian Phone Number Format only.");
	$.validator.addMethod("year", function(value, element) {
		return this.optional(element) || (value > 1950) && /^(\d{4})$/i.test(value);
	}, "Valid Year Only");
	$.validator.addMethod("notEqual", function(value, element, param) {
		valids = true; $this = this;
		$(param).not(element).each(function(i,v){
			valids = valids && !$.validator.methods.equalTo.call($this, value, element, $(v));
		});
		return this.optional(element) || valids;
	}, "This elements are the same with other, please change it.");

	$(document).delegate('input:not([type="hidden"]), select',"change",function(e){
		if(!$(this).hasClass("changed"))
			$(this).addClass("changed");
	});
	_depends = function(e){return $('[name="is_aktif"]').is(":checked")};
	var validator = $("#fompt").validate({
		ignore: ':hidden:not(:checkbox)',
		errorElement: 'div',
		errorClass: 'is-invalid',
		validClass: 'is-valid',
		errorPlacement: function(error, element) {
			element.parents(".form-group").append(error);
			//error.insertAfter(".form-group");
		},
		rules: {
			"land_documents_code" : {required: true, minlength: 6, maxlength: 50, json: true},
			"land_project_id" : {required: true},
			"land_physics_id" : {required: true},
			"land_mediator" : {alpha_space: true, maxlength: 50},
			"land_status_type_id" : {required: true},

			"map_province_id" : {required: true},
			"map_districts_id" : {required: true},
			"map_sub_district_id" : {required: true},
			"map_village_id" : {required: true},
			"map_geolocation" : {required: true},

			"owner_initial_name" : {alpha_space: true, required: true, maxlength: 50},
			"owner_final_name" : {alpha_space: true, required: true, maxlength: 50},
			"owner_ppjb" : {alpha_space: true, maxlength: 50},
			"owner_annotation" : {alpha_space: true},
			
			"surface_area_by_doc" : {rupiah: true, required: true},
			"surface_area_by_remeas" : {rupiah: true, required: true},
			"surface_area_by_geo" : {rupiah: true, required: true},

			"surface_data[1][1][1]" : {rupiah: true, required: true},
			"surface_data[1][1][2]" : {year: true, required: true, notEqual: '[data-unequal="purchase"]'},

			"surface_data[2][1][1]" : {rupiah: true, required: true},
			"surface_data[2][1][2]" : {year: true, required: true, notEqual: '[data-unequal="market"]'},
			
			"surface_data[3][1][1]" : {rupiah: true, required: true},
			"surface_data[3][1][2]" : {year: true, required: true, notEqual: '[data-unequal="njop"]'},
		},
		/*success: function(element) {  
			$(element).parents(".form-group").removeClass('has-error').addClass("has-success").find("label:last").remove();
		},
		errorPlacement: function(error, element) {
			element.parents(".form-group").removeClass('has-success').addClass("has-error").append(error.addClass("help-block"));
		}*/
	});
	
	$('[data-toggle="yearpicker"]').each(function(i, v){
		unequal=$(v).attr("data-unequal");
		$(v).yearpicker({
			onHide:function(){
				$('[data-unequal="'+unequal+'"]').each(function(i, v){
					validator.element('[name="'+$(v).attr("name")+'"]');
				});
			},
			onChange:function(){ 
				$('[data-unequal="'+unequal+'"]').each(function(i, v){
					validator.element('[name="'+$(v).attr("name")+'"]');
				});
			}
		});
	});
	validator.resetForm();

	<?php if($button=="Create"){ ?>
		$('a[data-toggle="tab"]').attr("disabled",true);
		$('a[data-toggle="tab"]').parents("li").addClass("disabled");
		$('.nav .disabled > a[data-toggle="tab"]').click(function(e) {
			e.preventDefault();
			if($(this).attr("disabled")=="disabled") return false;
				else return true;
		});
	<?php } ?>
	$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
		$('.popover').popover('hide');
		var href = $(e.target).attr('href');
		var $curr = $(".process-model a[href='" + href + "']").parent();
		//$('.process-model li[class="active"]').addClass("visited");
		$('.process-model li').removeClass("active");
		$curr.addClass("active");
		$curr.prevAll().filter(':not([class="active"])').addClass("visited");
	});
	$(document).delegate(".next-tab","click",function(e){
		e.preventDefault();
		$href_next = $(e.target).attr('data-href');
		$href_id = $(e.target).parents('.tab-pane').attr("id");
		$('.nav-tabs a[href="'+$href_next+'"]').parents("li").removeClass("disabled");
		$('.nav-tabs a[href="'+$href_next+'"]').attr("disabled",false);
		$('.nav-tabs a[href="#'+$href_id+'"]').parents("li").removeClass("disabled");
		$('.nav-tabs a[href="#'+$href_id+'"]').attr("disabled",false);
		$fourty_one = true;
		$form_data = {};
		$.each($(e.target).parents('.tab-pane').find("input, select"),function(i,v){
			$fourty_one &= validator.element('[name="'+$(v).attr("name")+'"]');
			$form_data[v.name]=v.value;
			//console.log($(v).valid());
		});
		console.log($form_data);
		$('.nav-tabs a[href="'+$href_next+'"]').tab('show');

		/*if($fourty_one){
			if($(this).hasClass("initial-save")){
				$.post('<?=base_url("land/initial_land")?>', $form_data, function(data){
					if(data.status==true){
						$.each(data.log_data, function(i,v){
							$("#"+$href_id).append("<input type='hidden' name='"+i+"' value='"+v+"'>");
						});
					}
					//console.log(data);
					$('.nav-tabs a[href="'+$href_next+'"]').tab('show');
				},"JSON")
			} else $('.nav-tabs a[href="'+$href_next+'"]').tab('show');
		}*/
	});

	<?php
	$cvb = $this->db->get("land_document_type")->result_array();
	$result_cvb = [];
	$length = round(sizeof($cvb) / 2);
	foreach ($cvb as $ids => $row) {
		//$result_cvb[(($ids < $length) ? 0 : 1)][$row["land_document_type_id"]] = $row["land_document_type_name"];
		$result_cvb[0][] = [
			"id"=>$row["land_document_type_id"],
			"text"=>$row["land_document_type_name"],
			"extra"=>$row["land_document_type_extra"],
			"disabled"=>false
		];
	}
	echo 'var $arrays=' . json_encode($result_cvb) . ';';
	?>
	var validators_render = {};
	function sp_render(array, id_vpn){
		vpn = '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-6"> \
				<div class="form-group"> \
					<label data-val='+ array.id +' for="docky_' + array.id + '" class="dockies">' + array.text + '</label> \
					<div class="d-flex align-items-center"> \
						<select name="col_doc[' + array.id + '][1]" class="form-control"> \
							<option hidden="" disabled="" selected="">--- Pilih Tipe ---</option> \
							<option value="0">ASLI</option> \
							<option value="1">COPY</option> \
							<option>N/A</option> \
						</select>';
		validators_render['[name="col_doc['+array.id+'][1]"]']={required: true};
		z=1;
		$.each(JSON.parse(array.extra), function(i,v){
			z++;
			vpn += '<input type="text" name="col_doc[' + array.id + ']['+(z)+']" value="" class="form-control" aria-describedby="col_doc_help_' + array.id + '_'+(z)+'" placeholder="'+(v)+'">';			
			valid_f = {required: true};
			if((["No","Luas"]).includes(v)){
				valid_f["alphanumeric_slash"]=true;
				valid_f["maxlength"]=30;
			} else if(v=="Tanggal"){
				valid_f["date"]=true;
			} else {
				valid_f["alpha_space"]=true;
				valid_f["maxlength"]=50;
			}
			validators_render['[name="col_doc['+array.id+']['+(z)+']"]']=valid_f;
		});
		z++;
		vpn += '	<input type="text" name="col_doc[' + array.id + ']['+(z)+']" value="" class="form-control" aria-describedby="col_doc_help_' + array.id + '_'+(z)+'" placeholder="keterangan">';
		vpn += id_vpn?'<input type="hiden" name="col_doc[' + array.id + '][id]" value="'+id_vpn+'">':"";
		vpn += '	<button data-val="' + array.id + '" data-method="2" class="btn btn-success btn-xi" style="overflow: unset; margin-right:5px" disabled> \
						<i class="anticon anticon-folder-open"></i> \
					</button> \
					<button data-val='+ array.id +' name="remove_list_doc" type="button" class="btn btn-danger"><i class="anticon anticon-delete"></i></button> \
				</div> \
			</div> \
		</div>';
		return vpn;
	}

	<?php if(empty($land["land_id"])){ ?>
		$.each($arrays, function(i, v) {
			//adopt = '<div class="col-md-6 col-sm-12"> \
			adopt = '';
			x=0;
			$.each(v, function(a, b) {
				if(x===5) return false;
				b.disabled=true;
				adopt += sp_render(b);
				x++;
			});
			adopt += '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"> \
						<div class="form-group submit-btn"> \
							<button class="btn btn-primary w-100">SUBMIT</button> \
						</div> \
					</div>';
			//adopt += '</div>';
			//adopt += '</div> \
			//	</div>';
			$('#sp_row').append(adopt);
			$.each(validators_render,function(i,v){
				$(i).rules("add",v);
			});
			validators_render = {};
			$('[placeholder="Tanggal"]').datetimepicker({ locale: 'id', Default: 'DD-MM-YYYY'});
			//$('.submit-btn').before(adopt);
			//console.log($arrays);
		});
	<?php } else { ?>
		$('[placeholder="Tanggal"]').datetimepicker({ locale: 'id', Default: 'DD-MM-YYYY'});
	<?php } ?>
	
	/*$("#popover_map, #popover_proof, .popover_select2").click(function() {
		if ($(this).children("i").hasClass("fa-plus_"))
			$(this).children("i").removeClass("fa-plus_").addClass("fa-close");
		else $(this).children("i").removeClass("fa-close").addClass("fa-plus_");
	});*/

	$(".subcollapse").click(function() {
		if ($(this).children("i").hasClass("fa-chevron-right"))
			$(this).children("i").removeClass("fa-chevron-right").addClass("fa-chevron-down");
		else $(this).children("i").removeClass("fa-chevron-down").addClass("fa-chevron-right");
	});

	$(".popover_select2").click(function(e){
		e.preventDefault();
	});
	$(".popover_select2").popover({
		animation: false,
		html: true,
		sanitize: false,
		content: '<div class="d-flex align-items-center">'+
					'<div class="input-group">'+
						'<select name="input_doc" class="form-control w-100">'+
							'<option hidden="" disabled="" selected="">-----Pilih Documents-----</option>'+
						'</select>'+
						'<div class="input-group-append">'+
							'<button class="btn btn-success" id="button_doc"><i class="anticon anticon-plus-circle"></i></button>'+
						'</div>'+
					'</div>'+
				'</div>',
		template: '<div class="popover select_size" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
		placement: "left",
		trigger: "click",
		//container : 'body'
	});
	//$(".popover_select2").popover('disable');
	$('.popover_select2').on('shown.bs.popover', function() {
		$('[name="input_doc"]').select2({theme:'bootstrap4',data:$arrays[0]}).on('select2:open', function(e) {
			$('.select2-container:last').addClass("zup");
		}).on("select2:selecting", function(evt, f, g) {
			var selId = evt.params.args.data.id;
			//$('[name="input_doc"] option[value="'+selId+'"]')[0].disabled=""
   			//var group = $("option[value='" + selId + "']").attr("groupid");
			//console.log(selId);
			//$("$dockies").each()
      		//disableSel2Group(evt, this, true);
    	}).on("select2:unselecting", function(evt) {
			//disableSel2Group(evt, this, false);
		});
		$('#button_doc').click(function(e){
			e.preventDefault();
			if($('[name="input_doc"]').val()){
				$dopt = $arrays[0][$('[name="input_doc"]').val()-1];
				$dopt.disabled = true;
				$('#sp_row>.col-lg-12').before(sp_render($dopt));
				$.each(validators_render,function(i,v){
					$(i).rules("add",v);
				});
				validators_render = {};
				$('[placeholder="Tanggal"]').datetimepicker({ locale: 'id', Default: 'DD-MM-YYYY'});
			}
		});

		$(".select2-container:first").addClass("wcup");
		$('.select2-selection--single').addClass("hcup");
	});

	$("#popover_proof").popover({
		html: true,
		content: '<div class="form-group" style="display: flex; margin-bottom: 0">' +
			'<?= cmb_template('input_proof', 'proof_type', 'proof_type_name', 'proof_type_id', null, ['placeholder' => '-----Pilih Jenis Dokumen-----']) ?>' +
			'<button name="button_proof" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span></button>' +
			'</div>',
		template: '<div class="popover select_size" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
		placement: "bottom",
		trigger: "click",
		//container : 'body'
	});

	$("#popover_map").popover({
		html: true,
		content: '<div class="form-group" style="display: flex; margin-bottom: 0">' +
			'<?php /*cmb_template('input_map', 'map_proof_type', 'map_proof_type_name', 'map_proof_type_id', null, ['placeholder' => '-----Pilih Jenis Dokumen-----']) */?>' +
			'<button name="button_map" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span></button>' +
			'</div>',
		template: '<div class="popover select_size" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
		placement: "bottom",
		trigger: "click",
		//container : 'body'
	});

	$(document).delegate('[name=remove_map],[name=remove_proof],[name=remove_list_doc]', 'click', function(e) {
		//$(this).siblings("input").rules("remove");
		$(this).parents(".form-group").remove();
		if($(this).attr("name") === "remove_list_doc"){
			$arrays[0][$(this).attr("data-val")-1].disabled = false;
		}
	});

	$('#popover_proof, #popover_map').on('shown.bs.popover', function() {
		$id_p = $(this).attr("id");
		$popover_id = {
			"popover_proof": [".slax_a", "[name=input_proof]"],
			"popover_map": [".slax_b", "[name=input_map]"]
		};
		$($popover_id[$id_p][1] + " option:not(:first)").removeAttr("disabled").removeAttr("hidden");
		$($popover_id[$id_p][0]).map(function(i, v) {
			console.log($($popover_id[$id_p][1] + " option:not(:first)[value=" + $(v).attr("data-val") + "]").text());
			$($popover_id[$id_p][1] + " option:not(:first)[value=" + $(v).attr("data-val") + "]")
				.attr("disabled", "disabled").attr("hidden", "hidden");
		});
	});

	//[name^=col_doc]
	$(document).delegate('[name^=proof_type_id], [name^=map_type_id]', 'change', function(e) {
		if($(this).val() && validator.element(e.target)){
			$(this).siblings(".btn-xi").attr("disabled",false);
		} else $(this).siblings(".btn-xi").attr("disabled",true);
	});
	$(document).delegate('[name^=col_doc]', 'change', function(e) {
		cfb = true;
		$(this).siblings("input, select").each(function(i,v){
			cfb &= validator.element(v);
		});
		if(cfb) $(this).siblings(".btn-xi").attr("disabled",false);
			else $(this).siblings(".btn-xi").attr("disabled",true);
	});
	$(document).delegate('[name=button_proof], [name=button_map]', 'click', function(e) {
		e.preventDefault();
		$pvr_id = {
			"button_proof": ["slax_a", "[name=input_proof]", "proof_type_id", "remove_proof", "bukti_hak", "#proof_body", 0],
			"button_map": ["slax_b", "[name=input_map]", "map_type_id", "remove_map", "luas_tanah", "#map_body", 1]
		};
		value = $($pvr_id[$(this).attr("name")][1]).val();
		v_text = $($pvr_id[$(this).attr("name")][1] + " option:selected").html();
		l_text = ((v_text.trim()).toLowerCase()).replace(/ /g, "_");
		v_true = true;
		$($pvr_id[$(this).attr("name")][0]).each(function(i, v) {
			if ($(v).attr("data-val") == value) {
				v_true = false;
			}
		});

		//$row_t = "<?= ($button != "Create") ? "<input id='" . '"+l_text+"' . "' type='checkbox' name='" . '"+$pvr_id[$(this).attr("name")][4]+"["+l_text+' . '"]' . "'" . '/>' : '' ?>";

		if (value && v_true) {
			$append = '<div class="form-group"> \
				<label for=' + l_text + ' data-val=' + value + ' class="' + $pvr_id[$(this).attr("name")][0] + '">' + v_text + '</label> \
				<div class="line-up"> \
					<input type="text" name="' + $pvr_id[$(this).attr("name")][2] + '[' + value + '][1]" placeholder="No. ' + v_text + '" class="form-control" style="margin-right:5px"> \
					<span data-method='+ $pvr_id[$(this).attr("name")][6] +' data-val=' + value + ' class="btn btn-success btn-xi" style="overflow: unset; margin-right:5px" disabled> \
						<span class="glyphicon glyphicon-folder-open"></span> \
					</span> \
					<button name="' + $pvr_id[$(this).attr("name")][3] + '" type="button" class="btn btn-danger"><span class="glyphicon glyphicon-trash"></span></button> \
				</div> \
			</div>';

			if($($pvr_id[$(this).attr("name")][5]).find(".next-tab").length){
				$($pvr_id[$(this).attr("name")][5]).find(".next-tab").before($append);
			} else $($pvr_id[$(this).attr("name")][5]).append($append);
		}
		$($pvr_id[$(this).attr("name")][1] + " option:selected").attr("disabled", "disabled").attr("hidden", "hidden");
		$($pvr_id[$(this).attr("name")][1]).val($($pvr_id[$(this).attr("name")][1] + " option:first").text());
		$($pvr_id[$(this).attr("name")][1] + " option:first").removeAttr("disabled").removeAttr("hidden").attr("selected", "selected");
		$($pvr_id[$(this).attr("name")][1] + " option:first").attr("disabled", "disabled").attr("hidden", "hidden");
		$('[name="' + $pvr_id[$(this).attr("name")][2] + '[' + value + '][1]"]').rules( "add", {alphanumeric_slash: true, required: true, maxlength: 30});
	});

	var was_create = false;
	$(document).delegate('.btn-xi', 'click', function(e) {
		e.preventDefault();
		$di = $('[name="land_id"]').val();
		$vf = $(this);
		$id = $vf.attr("data-val");
		$mt = $vf.attr("data-method");
		
		$('[name$="[file][]"]').fileinput("destroy");
		$('[name$="[file][]"]').hide();

		var footerTemplate = '<div class="file-thumbnail-footer" style ="height:94px">\
				<input class="mt-2 kv-input kv-new form-control input-sm form-control-sm text-center" value="{caption}" data-caption="{caption}" placeholder="Enter caption...">\
			   <div class="small">{size}</div>\
			   {progress}\
			   {indicator}\
			   {actions}\
			</div>';

		file_option = {
			theme: 'fa',
			uploadUrl: "<?= base_url('land/upload_data/') ?>" + $mt,
			deleteUrl: "<?= base_url('land/upload_delete/') ?>",
			uploadExtraData: function(previewId, index){
				var extraData = {id:$id, land:$di}; tmp=[]; xyz=[];
				colDock = $('[name="coldoc['+$id+'][id]"]');
				if(colDock.length==0 && index==0){
					$vf_x = $vf.parents(".form-group").find("select, input");
					$vf_x.each(function(i,v){
						if([0,$vf_x.length-1].includes(i)) tmp.push(v.value);
						else xyz.push(v.value);
					});
					extraData["initial"] = JSON.stringify(tmp);
					extraData["optional"] = JSON.stringify(xyz);
				} else {
					extraData["file-id"] = colDock.val();
				}
				
				$vf_y = $(".kv-input").eq(index);
				extraData["name"] = $vf_y.val();
				extraData["extension"] = String($vf_y.data("caption")).match(/\.[^.\s]{3,4}$/g);
				return extraData;
			},
			allowedFileTypes: ["image","pdf"],
			allowedFileExtensions: ["jpg", "jpeg", "gif", "png", "pdf"],
			maxFileSize: 10000,
			maxFilesNum: 10,
			browseClass: "btn btn-primary form-control",
			showCaption: false,
			//uploadAsync: false,
			//showRemove: false,
			//showUpload: false,
			overwriteInitial: false,
			layoutTemplates: {
				main2: "<div class='input-group {class}'>\
					{browse} \
					<div class='input-group-btn input-group-prepend'>{remove}</div>\
					<div class='input-group-btn input-group-prepend'>{upload}</div>\
				</div> \
				{preview}",
				footer: footerTemplate
			}
		};

		if(!$('#file-wrap [name="coldoc['+$id+'][file][]"]').length){
			$('#file-wrap').append('<div class="file-loading"> \
				<input name="coldoc['+$id+'][file][]" type="file" multiple class="file"> \
			</div>');
			$('[name="coldoc['+$id+'][file][]"]').fileinput(file_option);
		} else {
			$('[name="coldoc['+$id+'][file][]"]').show().fileinput(file_option);
			$('[name="coldoc['+$id+'][file][]"]').parents(".btn-file").removeAttr("disabled");
		}

		$('[name="coldoc['+$id+'][file][]"]').on('fileuploaded', function(event, previewId, index, fileId) {
			key = previewId.response.key;
			//filename = previewId.response.filename;
			//urle = previewId.response.urle;
			//id = previewId.response.id;
			//method = previewId.response.method;
			
			$vf.parents(".form-group").append(
				'<input type="hidden" value="'+key+'" name="coldoc['+$id+'][id]">'
			)
		}).on('filedeleted', function(event, key, jqXHR, data) {
			$method_id = ['proof_type_id','map_type_id','col_file'];
			$('[name^="'+$method_id[data.urle]+'['+data.id+']"][value="'+key+'"]').remove();
		}).on('fileloaded', function(event, file, previewId, fileId, index, reader) {
			$(".kv-input:visible").each(function(i,v) {
				$(v).val($(v).data("caption").replace(/\.[^.\s]{3,4}$/g,''));
			});
		});

		$("#tambahDoc").modal('show');

		/*xc_box = String($(this).siblings("input").attr("name")).slice(0, -3);
		//console.log(xc_box);

		var $urle = $(this).attr("data-method");
		$node_id = ['#proof_body','#map_body','#sp_row'];
		$method_id = ['proof_type_id','map_type_id','col_file'];
		$path_id = ['land_id','map_id','land_id'];
		
		extraData = {
			id: $id,
			urle: $urle
		}

		if($urle == 2){
			xc_box = xc_box.replace(new RegExp("[a-zA-Z_]+","g"),"col_file");
			$number = [];
			$(this).parents(".line-up").find("select, input").each(function(i,v){
				$number.push(v.value);
			});
			extraData["number"] = JSON.stringify($number);
		} else if($urle == 0 || $urle == 1){
			extraData["number"] = $('[name="'+$method_id[$urle]+'['+$id+'][1]"]').val();
		}

		extraData["path_id"] = $('[name="'+$path_id[$urle]+'"]').val();

		file_option = {
			theme: 'fa',
			uploadUrl: "<?= base_url('land/upload_image/') ?>" + $urle,
			deleteUrl: "<?= base_url('land/upload_delete/') ?>",
			uploadExtraData: extraData,
			allowedFileTypes: ["image","pdf"],
			//enableResumableUpload: true,
			allowedFileExtensions: ["jpg", "jpeg", "gif", "png", "pdf"],
			overwriteInitial: false,
			maxFileSize: 10000,
			maxFilesNum: 10,
			layoutTemplates: {
				main1: "<div class=\'input-group {class}\'>\n" +
					"   <div class=\'input-group-btn\ input-group-prepend'>\n" +
					"       {browse}\n" +
					"   </div>\n" +
					"   {caption}\n" +
					"   <div class=\'input-group-btn\ input-group-prepend'>\n" +
					"       {remove}\n" +
					"       {upload}\n" +
					"   </div>\n" +
					"</div>" + "{preview}\n"
			},
			slugCallback: function(filename) {
				return filename.replace('(', '_').replace(']', '_');
			}
		};

		if($('[name^="'+$method_id[$urle]+'['+$id+']"][type="hidden"]').length){
			array_image = [];
			array_option = [];
			$('[name^="'+$method_id[$urle]+'['+$id+']"][type="hidden"]').each(function(i,v){
				array_image.push('<?=base_url("land/show_file/")?>'+v.value);
				$.ajax({
					async: false,
					type: 'GET',
					dataType: "JSON",
					url: '<?=base_url("land/info_file/")?>'+v.value,
					success: function(raw_data) {
						array_option.push({
							caption:raw_data.name,
							filetype:raw_data.mime,
							type:raw_data.type,
							size:raw_data.size,
							key:v.value,
							extra:{
								path_id:$('[name="'+$path_id[$urle]+'"]').val(),
								type:$path_id[$urle],
								method:"-1",
								urle:$urle,
								id:$id
							}
						});
					}
				});
				//array_option.push({key: v.value, extra: {method:"-1",urle:$urle,id:$id}});
			});
			file_option["initialPreview"]=array_image;
			file_option["initialPreviewConfig"]=array_option;
			file_option["initialPreviewAsData"]=true;
		}

		//$("#file-1").fileinput('destroy').fileinput(file_option);

		if(was_create==false){
			$('[name="file-data-'+$id+'"]').on('fileuploaded', function(event, previewId, index, fileId) {
				key = previewId.response.key;
				filename = previewId.response.filename;
				urle = previewId.response.urle;
				id = previewId.response.id;
				method = previewId.response.method;
				ele = $(document.getElementById(index));
				ele.find(".file-footer-caption").attr("title", filename);
				ele.find(".file-caption-info").text(filename);
				ele.find(".kv-file-remove").click(function(e) {
					//e.preventDefault();
					$.post("<?= base_url('land/upload_delete') ?>", {
						path_id:$('[name="'+$path_id[$urle]+'"]').val(),
						type:$path_id[$urle],
						filename: filename,
						method: method,
						urle: urle,
						key: key,
						id: id
					}, function(data) {
						$method_id = ['proof_type_id','map_type_id','col_file'];
						$('[name^="'+$method_id[data.urle]+'['+data.id+']"][value="'+data.key+'"]').remove();
					},"JSON");
				});
				$node_length = $('[name^="'+xc_box+'"]').length + 1;
				if($('[name="'+xc_box+'['+($node_length-1)+']]').val()!=key){
					$($node_id[method]).append('<input type="hidden" value="'+key+'" name="'+xc_box+'['+$node_length+']">');
				}
			});
			$("#file-1").on('filedeleted', function(event, key, jqXHR, data) {
				$method_id = ['proof_type_id','map_type_id','col_file'];
				$('[name^="'+$method_id[data.urle]+'['+data.id+']"][value="'+key+'"]').remove();
			});
			was_create=true;
		}
		$("#tambahDoc").modal('show');

		var canvasElement = $(".file-preview-thumbnails")[0];
		obs.observe(canvasElement, {
			childList: true,
			subtree: true
		});*/
	});

	MutationObserver = window.MutationObserver || window.WebKitMutationObserver;

	var obs = new MutationObserver(function(mutations, observer) {
		$.each(mutations, function(i, mutation) {
			var addedNodes = $(mutation.addedNodes);
			var removedNodes = $(mutation.removedNodes);
			var selector = ".kv-file-upload"
			var selector2 = ".file-preview-frame"
			var filteredEls = addedNodes.find(selector).addBack(selector);
			var filteredElse = removedNodes.find(selector2).addBack(selector2);
			filteredEls.each(function() {
				$(this).click();
				//console.log('Insertion detected: ' + $(this).html());
			});
			filteredElse.each(function() {
				//$(this).preventDefault();
				//console.log($(this));
				//$(this).click();
				//console.log('Insertion detected: ' + $(this).html());
			});
		});
	});


	//testing
	$datalah = {
		"draw": {
			"type": "Feature",
			"geometry": {
				"coordinates": [
					[
						[
							-95.27286241574141,
							38.95251871103957
						],
						[
							-95.27231610174829,
							38.952529201174116
						],
						[
							-95.27234645252557,
							38.95168474037246
						],
						[
							-95.27287253266717,
							38.95170309832292
						],
						[
							-95.27286241574141,
							38.95251871103957
						]
					]
				],
				"type": "Polygon"
			},
			"properties": {}
		},
		"view": {
			"center": [
				-95.2728303788092,
				38.95230366293896
			],
			"zoom": 17.669685102536143
		}
	}
	//$('input[name="geolocation"]').val(JSON.stringify($datalah));

	$(".btn-map").click(function(e) {
		$("#tambahMap").modal("show");
	});

	var $raw_data = ""; var map_query;
	$('#tambahMap').on('shown.bs.modal', function() {
		try {
			$current_data = JSON.parse($('input[name="map_geolocation"]').val());
		} catch (e) {
			$current_data = {};
		}

		const code = 'pk.eyJ1IjoiZ2VyeWYzZjMiLCJhIjoiY2thaXAzbHBlMDJibDJxcGZnMXlhaGNzMyJ9.hEUths9qWrjH_TkaHQ2eng';
		map_args = {
			container: 'map', // container id
			style: 'mapbox://styles/mapbox/satellite-streets-v11'
		}
		if($current_data.view != undefined){
			map_args["center"]=$current_data.view.center;
			map_args["zoom"]=$current_data.view.zoom;
		}
		mapboxgl.accessToken = code;
		var map = new mapboxgl.Map(map_args);

		var LotsOfPointsMode = {};
		LotsOfPointsMode.onDrag = function(state, e) {
			e.preventDefault();
		};
		var draw = new MapboxDraw({
			displayControlsDefault: false,
			controls: {
				polygon: true,
				trash: true
			}
		});
		var geocoder = new MapboxGeocoder({
			accessToken: code,
			mapboxgl: mapboxgl,
			marker: false
		});

		map.addControl(geocoder);
		map_query = $('[name="map_village_id"] option:selected').text()+" "+$('[name="map_sub_district_id"] option:selected').text();
		geocoder.query(map_query);

		function generate_layer(id, source) {
			return {
				'id': id,
				'type': 'symbol',
				'source': source,
				'layout': {
					'text-field': ['get', 'title'],
					'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],
					'text-offset': [0, 0.6],
					'text-anchor': 'center',
					'text-rotation-alignment': 'viewport',
					'text-size': 12,
					'text-rotate': {
						'type': 'identity',
						'property': 'rotation'
					}
				},
				'paint': {
					'text-color': '#202',
					'text-halo-color': '#fff',
					'text-halo-width': 2
				}
			}
		}

		map.addControl(draw);

		var $temp_coor;

		function label_render() {
			if (map.getLayer("points") != undefined) {
				map.removeLayer("points").removeSource("points");
			}
			var data = draw.getAll();
			if (data.features.length > 0) {
				$(".mapbox-gl-draw_polygon").attr("disabled", true);

				features = [];
				//$(".mapbox-gl-draw_trash").attr("disabled",true);
				$.each(data.features[0].geometry.coordinates[0], function(i, v) {
					length_coordinates = data.features[0].geometry.coordinates[0].length - 1;
					if (i) {
						turfie = turf.point(templah);
						turfi = turf.point(v);
						templah = v;
						temper_distance = turf.distance(turfie, turfi);
						temper_feature = turf.midpoint(turfie, turfi);

						var dLon = temper_feature.geometry.coordinates[0] - v[0];
						var dLat = temper_feature.geometry.coordinates[1] - v[1];
						var angle = 90 + (Math.atan2(dLon, dLat) * 180 / Math.PI);

						temper_bearing = angle;
						if (temper_distance >= 1) {
							temper_feature.properties.title = (Math.round(temper_distance * 100) / 100) + " km";
							temper_feature.properties.rotation = temper_bearing;
						} else {
							temper_feature.properties.title = (Math.round((temper_distance * 1000) * 100) / 100) + " m";
							temper_feature.properties.rotation = temper_bearing;
						}

						//temper_feature.properties.mode = "labeled";
						features.push(temper_feature);

					} else templah = v;
				});

				area = turf.area(data);
				centroid = turf.centroid(data);

				if (area < 1) {
					centroid.properties.title = (Math.round((area * 1000000) * 100) / 100) + " km²";
					centroid.properties.rotation = 0;
				} else {
					centroid.properties.title = (Math.round(area * 100) / 100) + " m²";
					centroid.properties.rotation = 0;
				}

				//centroid.properties.mode = "labeled";
				features.push(centroid);

				map.addSource('points', {
					'type': 'geojson',
					'data': {
						'type': 'FeatureCollection',
						'features': features
					}
				});

				map.addLayer(generate_layer("points", "points"));

				$draw_data = (draw.getAll()).features[0];
				delete $draw_data.id;

				$raw_data = {
					"draw": $draw_data,
					"view": {
						"center": [map.getCenter().lng, map.getCenter().lat],
						"zoom": map.getZoom(),
					}
				}

				$temp_coor = $draw_data;
				//console.log(JSON.stringify($raw_data));
			}
		}

		$(".mapbox-gl-draw_trash").click((e) => {
			e.preventDefault();
			draw.deleteAll();
			if (map.getLayer("points") != undefined) {
				map.removeLayer("points").removeSource("points");
			}
			$(".mapbox-gl-draw_polygon").attr("disabled", false);
		});

		geocoder.on('results', function(results) {
			console.log(results);
		});

		map.on('load', function() {
			if($current_data.draw!=undefined){
				var featureIds = draw.add($current_data.draw);
			}
			label_render();
		});

		map.on('draw.create', function(e) {
			label_render();
		});

		map.on('draw.update', function(e) {
			console.log(e.action);
			if (e.action === 'move') {
				draw.deleteAll();
				draw.add($temp_coor);
			}
			label_render();
		});
		/*map.on('draw.delete', function(e) {
			if(map.getLayer("points") != undefined){
				map.removeLayer("points").removeSource("points");
			}
		});
		map.on('draw.selectionchange', (e) => {
			console.log(draw.getMode()+"B");
			
			const { features, points } = e;
			const hasLine = (features && (features.length > 0));
			const hasPoints = (points && (points.length > 0));
			if (hasLine && ! hasPoints) {
				// line clicked
				if (draw.getMode() !== 'direct_select') {
					draw.changeMode('direct_select', { featureId: features[0].id });
				}
			} else if (hasLine && hasPoints) {
				// line vertex clicked
			} else if (! hasLine && ! hasPoints) {
				// deselected
			}
		});*/
		/*L.mapbox.accessToken = code;

		var geocoder = L.mapbox.geocoder('mapbox.places');

		var map = L.mapbox.map('map', null, {
			styleLayer: {
				maxZoom: 23,
				minZoom: 0
			}
		}).setView([-2.483454, 117.964729], 6)
			.addLayer(L.mapbox.styleLayer('mapbox://styles/mapbox/streets-v11'))
			.addControl(L.mapbox.geocoderControl('mapbox.places', {
				autocomplete: true,
				countries: "indonesia"
			}));
		
		geocoder.query('Karawang', showMap);

		function showMap(err, data) {
			if (data.lbounds) {
				map.fitBounds(data.lbounds);
			} else if (data.latlng) {
				map.setView([data.latlng[0], data.latlng[1]], 13);
			}
		}

		//Draw
		var featureGroup = L.featureGroup().addTo(map);
		L.EditToolbar.Delete.include({ removeAllLayers: false });
		var drawControlFull = new L.Control.Draw({
			position: 'topright',
			draw: {
				polygon: true,
				polyline: false,
				circle: false,
				rectangle: false,
				circlemarker: false,
				marker: false
			},
			edit: {
				featureGroup: featureGroup,
				remove: true
			}
		}).addTo(map);
		var drawControlEditOnly = new L.Control.Draw({
			position: 'topright',
			draw: {
				polygon: true,
				polyline: false,
				circle: false,
				rectangle: false,
				circlemarker: false,
				marker: false
			},
			edit: {
				featureGroup: featureGroup,
				remove: true
			},
			draw: false
		});

		map.on('draw:created', function(e) {
			featureGroup.addLayer(e.layer);
			$.each(featureGroup._layers, function(i,v){
				v.showMeasurements();
				console.log(
					JSON.stringify(v.toGeoJSON())
				);
			});
			drawControlFull.remove(map);
    		drawControlEditOnly.addTo(map);
		});

		map.on('draw:edited', function(e) {
			$.each(featureGroup._layers, function(i,v){
				v.updateMeasurements()
			});
		});

		map.on('draw:deleted', function(e) {
			if (featureGroup.getLayers().length === 0){
				drawControlEditOnly.remove(map);
				drawControlFull.addTo(map);
			};
		});
		
		// Custom Button
		var stateChangingButton = L.easyButton({
			states: [{
				stateName: 'satellite-layer',
				icon:      'fa-map',
				title:     'Satellite Layer',
				onClick: function(btn, mp) {
					L.mapbox.tileLayer('mapbox.satellite').addTo(map);
					btn.state('streets-layer');
				}
			}, {
				stateName: 'streets-layer',
				icon:      'fa-map-o',
				title:     'Streets Layer',
				onClick: function(btn, mp) {
					L.mapbox.tileLayer('mapbox.streets').addTo(map);
					btn.state('satellite-layer');
				}
			}]
		});

		stateChangingButton.addTo(map);
		
		map.on('pm:create', function (e) {
			var type = e.shape, layer = e.layer._latlngs[0];
			coordinates = [];
			for (var i = 0; i < layer.length; i++) {
				coordinates.push([layer[i].lng, layer[i].lat])
			}
			console.log(coordinates);
		});
		
		map.on('pm:globaleditmodetoggled', e => {
			if(!e.enabled) map.pm.Draw.getShapes();
		});*/
	});

	$(document).delegate('#save_mat', 'click', function(e) {
		console.log(JSON.stringify($raw_data));
		$('input[name="map_geolocation"]').val(JSON.stringify($raw_data));
		$('#tambahMap').modal("hide");
	});

	//.fileinput-upload
	//.kv-file-remove
	//$("#input-40").fileinput("disable").fileinput("refresh", {showUpload: false});
</script>